//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace uforme.RestfulWebServiceReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RestfulWebServiceSoap", Namespace="http://190.144.156.100:8090/")]
    public partial class RestfulWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogInOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback MatchMakerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RestfulWebService() {
            this.Url = global::uforme.Properties.Settings.Default.uforme_RestfulWebServiceReference_RestfulWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event LogInCompletedEventHandler LogInCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event UpdateProfileCompletedEventHandler UpdateProfileCompleted;
        
        /// <remarks/>
        public event GetUserPreferencesCompletedEventHandler GetUserPreferencesCompleted;
        
        /// <remarks/>
        public event UpdateUserPreferencesCompletedEventHandler UpdateUserPreferencesCompleted;
        
        /// <remarks/>
        public event CreateUserPreferencesCompletedEventHandler CreateUserPreferencesCompleted;
        
        /// <remarks/>
        public event DeleteUserPreferencesCompletedEventHandler DeleteUserPreferencesCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetImageCompletedEventHandler GetImageCompleted;
        
        /// <remarks/>
        public event SaveImageCompletedEventHandler SaveImageCompleted;
        
        /// <remarks/>
        public event DeleteImageCompletedEventHandler DeleteImageCompleted;
        
        /// <remarks/>
        public event MatchMakerCompletedEventHandler MatchMakerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/CreateUser", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateUser(string Password, string firstName, string lastName, string userName, string email) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        Password,
                        firstName,
                        lastName,
                        userName,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAsync(string Password, string firstName, string lastName, string userName, string email) {
            this.CreateUserAsync(Password, firstName, lastName, userName, email, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(string Password, string firstName, string lastName, string userName, string email, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        Password,
                        firstName,
                        lastName,
                        userName,
                        email}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/LogIn", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LogIn(string userName, string password) {
            object[] results = this.Invoke("LogIn", new object[] {
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LogInAsync(string userName, string password) {
            this.LogInAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void LogInAsync(string userName, string password, object userState) {
            if ((this.LogInOperationCompleted == null)) {
                this.LogInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogInOperationCompleted);
            }
            this.InvokeAsync("LogIn", new object[] {
                        userName,
                        password}, this.LogInOperationCompleted, userState);
        }
        
        private void OnLogInOperationCompleted(object arg) {
            if ((this.LogInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogInCompleted(this, new LogInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/ResetPassword", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ResetPassword(string password, string userName) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        password,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string password, string userName) {
            this.ResetPasswordAsync(password, userName, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string password, string userName, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        password,
                        userName}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/UpdateProfile", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateProfile(string userName, string email, string phone, string ccNumber, string cid, string gender, string height, string bodyType, string birthDate, string city, string state, string zip, string languagePreference) {
            object[] results = this.Invoke("UpdateProfile", new object[] {
                        userName,
                        email,
                        phone,
                        ccNumber,
                        cid,
                        gender,
                        height,
                        bodyType,
                        birthDate,
                        city,
                        state,
                        zip,
                        languagePreference});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProfileAsync(string userName, string email, string phone, string ccNumber, string cid, string gender, string height, string bodyType, string birthDate, string city, string state, string zip, string languagePreference) {
            this.UpdateProfileAsync(userName, email, phone, ccNumber, cid, gender, height, bodyType, birthDate, city, state, zip, languagePreference, null);
        }
        
        /// <remarks/>
        public void UpdateProfileAsync(string userName, string email, string phone, string ccNumber, string cid, string gender, string height, string bodyType, string birthDate, string city, string state, string zip, string languagePreference, object userState) {
            if ((this.UpdateProfileOperationCompleted == null)) {
                this.UpdateProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProfileOperationCompleted);
            }
            this.InvokeAsync("UpdateProfile", new object[] {
                        userName,
                        email,
                        phone,
                        ccNumber,
                        cid,
                        gender,
                        height,
                        bodyType,
                        birthDate,
                        city,
                        state,
                        zip,
                        languagePreference}, this.UpdateProfileOperationCompleted, userState);
        }
        
        private void OnUpdateProfileOperationCompleted(object arg) {
            if ((this.UpdateProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProfileCompleted(this, new UpdateProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/GetUserPreferences", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserPreferences(string userName) {
            object[] results = this.Invoke("GetUserPreferences", new object[] {
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPreferencesAsync(string userName) {
            this.GetUserPreferencesAsync(userName, null);
        }
        
        /// <remarks/>
        public void GetUserPreferencesAsync(string userName, object userState) {
            if ((this.GetUserPreferencesOperationCompleted == null)) {
                this.GetUserPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPreferencesOperationCompleted);
            }
            this.InvokeAsync("GetUserPreferences", new object[] {
                        userName}, this.GetUserPreferencesOperationCompleted, userState);
        }
        
        private void OnGetUserPreferencesOperationCompleted(object arg) {
            if ((this.GetUserPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPreferencesCompleted(this, new GetUserPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/UpdateUserPreferences", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUserPreferences(
                    string userName, 
                    string genderPreference, 
                    string agePreference, 
                    string locationPreference, 
                    string distancePreference, 
                    string relationshipPreference, 
                    string childrenPreference, 
                    string ethnicityPreference, 
                    string religionPreference, 
                    string educationPreference, 
                    string bodytypePreference, 
                    string heightPreference, 
                    string smokingPreference, 
                    string cityPreference, 
                    string statePreference, 
                    string zipPreference, 
                    string ageLowerRangePreference, 
                    string ageUpperRangePreference, 
                    string isPrimaryPreference, 
                    string preferenceAlias) {
            object[] results = this.Invoke("UpdateUserPreferences", new object[] {
                        userName,
                        genderPreference,
                        agePreference,
                        locationPreference,
                        distancePreference,
                        relationshipPreference,
                        childrenPreference,
                        ethnicityPreference,
                        religionPreference,
                        educationPreference,
                        bodytypePreference,
                        heightPreference,
                        smokingPreference,
                        cityPreference,
                        statePreference,
                        zipPreference,
                        ageLowerRangePreference,
                        ageUpperRangePreference,
                        isPrimaryPreference,
                        preferenceAlias});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserPreferencesAsync(
                    string userName, 
                    string genderPreference, 
                    string agePreference, 
                    string locationPreference, 
                    string distancePreference, 
                    string relationshipPreference, 
                    string childrenPreference, 
                    string ethnicityPreference, 
                    string religionPreference, 
                    string educationPreference, 
                    string bodytypePreference, 
                    string heightPreference, 
                    string smokingPreference, 
                    string cityPreference, 
                    string statePreference, 
                    string zipPreference, 
                    string ageLowerRangePreference, 
                    string ageUpperRangePreference, 
                    string isPrimaryPreference, 
                    string preferenceAlias) {
            this.UpdateUserPreferencesAsync(userName, genderPreference, agePreference, locationPreference, distancePreference, relationshipPreference, childrenPreference, ethnicityPreference, religionPreference, educationPreference, bodytypePreference, heightPreference, smokingPreference, cityPreference, statePreference, zipPreference, ageLowerRangePreference, ageUpperRangePreference, isPrimaryPreference, preferenceAlias, null);
        }
        
        /// <remarks/>
        public void UpdateUserPreferencesAsync(
                    string userName, 
                    string genderPreference, 
                    string agePreference, 
                    string locationPreference, 
                    string distancePreference, 
                    string relationshipPreference, 
                    string childrenPreference, 
                    string ethnicityPreference, 
                    string religionPreference, 
                    string educationPreference, 
                    string bodytypePreference, 
                    string heightPreference, 
                    string smokingPreference, 
                    string cityPreference, 
                    string statePreference, 
                    string zipPreference, 
                    string ageLowerRangePreference, 
                    string ageUpperRangePreference, 
                    string isPrimaryPreference, 
                    string preferenceAlias, 
                    object userState) {
            if ((this.UpdateUserPreferencesOperationCompleted == null)) {
                this.UpdateUserPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserPreferencesOperationCompleted);
            }
            this.InvokeAsync("UpdateUserPreferences", new object[] {
                        userName,
                        genderPreference,
                        agePreference,
                        locationPreference,
                        distancePreference,
                        relationshipPreference,
                        childrenPreference,
                        ethnicityPreference,
                        religionPreference,
                        educationPreference,
                        bodytypePreference,
                        heightPreference,
                        smokingPreference,
                        cityPreference,
                        statePreference,
                        zipPreference,
                        ageLowerRangePreference,
                        ageUpperRangePreference,
                        isPrimaryPreference,
                        preferenceAlias}, this.UpdateUserPreferencesOperationCompleted, userState);
        }
        
        private void OnUpdateUserPreferencesOperationCompleted(object arg) {
            if ((this.UpdateUserPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserPreferencesCompleted(this, new UpdateUserPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/CreateUserPreferences", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateUserPreferences(string userName, string preferenceAlias) {
            object[] results = this.Invoke("CreateUserPreferences", new object[] {
                        userName,
                        preferenceAlias});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserPreferencesAsync(string userName, string preferenceAlias) {
            this.CreateUserPreferencesAsync(userName, preferenceAlias, null);
        }
        
        /// <remarks/>
        public void CreateUserPreferencesAsync(string userName, string preferenceAlias, object userState) {
            if ((this.CreateUserPreferencesOperationCompleted == null)) {
                this.CreateUserPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserPreferencesOperationCompleted);
            }
            this.InvokeAsync("CreateUserPreferences", new object[] {
                        userName,
                        preferenceAlias}, this.CreateUserPreferencesOperationCompleted, userState);
        }
        
        private void OnCreateUserPreferencesOperationCompleted(object arg) {
            if ((this.CreateUserPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserPreferencesCompleted(this, new CreateUserPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/DeleteUserPreferences", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteUserPreferences(string userName, string preferenceAlias) {
            object[] results = this.Invoke("DeleteUserPreferences", new object[] {
                        userName,
                        preferenceAlias});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserPreferencesAsync(string userName, string preferenceAlias) {
            this.DeleteUserPreferencesAsync(userName, preferenceAlias, null);
        }
        
        /// <remarks/>
        public void DeleteUserPreferencesAsync(string userName, string preferenceAlias, object userState) {
            if ((this.DeleteUserPreferencesOperationCompleted == null)) {
                this.DeleteUserPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserPreferencesOperationCompleted);
            }
            this.InvokeAsync("DeleteUserPreferences", new object[] {
                        userName,
                        preferenceAlias}, this.DeleteUserPreferencesOperationCompleted, userState);
        }
        
        private void OnDeleteUserPreferencesOperationCompleted(object arg) {
            if ((this.DeleteUserPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserPreferencesCompleted(this, new DeleteUserPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/GetUser", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUser(string userName) {
            object[] results = this.Invoke("GetUser", new object[] {
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(string userName) {
            this.GetUserAsync(userName, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(string userName, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        userName}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/GetImage", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetImage(string userName, int FirstOnly) {
            object[] results = this.Invoke("GetImage", new object[] {
                        userName,
                        FirstOnly});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageAsync(string userName, int FirstOnly) {
            this.GetImageAsync(userName, FirstOnly, null);
        }
        
        /// <remarks/>
        public void GetImageAsync(string userName, int FirstOnly, object userState) {
            if ((this.GetImageOperationCompleted == null)) {
                this.GetImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageOperationCompleted);
            }
            this.InvokeAsync("GetImage", new object[] {
                        userName,
                        FirstOnly}, this.GetImageOperationCompleted, userState);
        }
        
        private void OnGetImageOperationCompleted(object arg) {
            if ((this.GetImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageCompleted(this, new GetImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/SaveImage", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveImage(string userName, string name, string fName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] imgbytes) {
            object[] results = this.Invoke("SaveImage", new object[] {
                        userName,
                        name,
                        fName,
                        imgbytes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveImageAsync(string userName, string name, string fName, byte[] imgbytes) {
            this.SaveImageAsync(userName, name, fName, imgbytes, null);
        }
        
        /// <remarks/>
        public void SaveImageAsync(string userName, string name, string fName, byte[] imgbytes, object userState) {
            if ((this.SaveImageOperationCompleted == null)) {
                this.SaveImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveImageOperationCompleted);
            }
            this.InvokeAsync("SaveImage", new object[] {
                        userName,
                        name,
                        fName,
                        imgbytes}, this.SaveImageOperationCompleted, userState);
        }
        
        private void OnSaveImageOperationCompleted(object arg) {
            if ((this.SaveImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveImageCompleted(this, new SaveImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/DeleteImage", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteImage(int idImage) {
            object[] results = this.Invoke("DeleteImage", new object[] {
                        idImage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteImageAsync(int idImage) {
            this.DeleteImageAsync(idImage, null);
        }
        
        /// <remarks/>
        public void DeleteImageAsync(int idImage, object userState) {
            if ((this.DeleteImageOperationCompleted == null)) {
                this.DeleteImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImageOperationCompleted);
            }
            this.InvokeAsync("DeleteImage", new object[] {
                        idImage}, this.DeleteImageOperationCompleted, userState);
        }
        
        private void OnDeleteImageOperationCompleted(object arg) {
            if ((this.DeleteImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImageCompleted(this, new DeleteImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://190.144.156.100:8090/MatchMaker", RequestNamespace="http://190.144.156.100:8090/", ResponseNamespace="http://190.144.156.100:8090/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MatchMaker(string userName, string genderPreference, string agePreference, string bodytypePreference, string heightPreference, string cityPreference, string statePreference, string zipPreference) {
            object[] results = this.Invoke("MatchMaker", new object[] {
                        userName,
                        genderPreference,
                        agePreference,
                        bodytypePreference,
                        heightPreference,
                        cityPreference,
                        statePreference,
                        zipPreference});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MatchMakerAsync(string userName, string genderPreference, string agePreference, string bodytypePreference, string heightPreference, string cityPreference, string statePreference, string zipPreference) {
            this.MatchMakerAsync(userName, genderPreference, agePreference, bodytypePreference, heightPreference, cityPreference, statePreference, zipPreference, null);
        }
        
        /// <remarks/>
        public void MatchMakerAsync(string userName, string genderPreference, string agePreference, string bodytypePreference, string heightPreference, string cityPreference, string statePreference, string zipPreference, object userState) {
            if ((this.MatchMakerOperationCompleted == null)) {
                this.MatchMakerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMatchMakerOperationCompleted);
            }
            this.InvokeAsync("MatchMaker", new object[] {
                        userName,
                        genderPreference,
                        agePreference,
                        bodytypePreference,
                        heightPreference,
                        cityPreference,
                        statePreference,
                        zipPreference}, this.MatchMakerOperationCompleted, userState);
        }
        
        private void OnMatchMakerOperationCompleted(object arg) {
            if ((this.MatchMakerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MatchMakerCompleted(this, new MatchMakerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LogInCompletedEventHandler(object sender, LogInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateProfileCompletedEventHandler(object sender, UpdateProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetUserPreferencesCompletedEventHandler(object sender, GetUserPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateUserPreferencesCompletedEventHandler(object sender, UpdateUserPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CreateUserPreferencesCompletedEventHandler(object sender, CreateUserPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeleteUserPreferencesCompletedEventHandler(object sender, DeleteUserPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetImageCompletedEventHandler(object sender, GetImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SaveImageCompletedEventHandler(object sender, SaveImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeleteImageCompletedEventHandler(object sender, DeleteImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void MatchMakerCompletedEventHandler(object sender, MatchMakerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatchMakerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MatchMakerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591